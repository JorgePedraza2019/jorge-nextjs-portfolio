name: CD

on:
  workflow_dispatch:  # Allows manual triggering of this workflow
  
  # Note: The CD configuration is not yet fully set up, and as such, this feature is currently inactive.
  # workflow_run:
  #   workflows: ["CI"]
  #   types:
  #     - completed  # Trigger CD only after CI completes successfully

jobs:
  deploy_dev:
    if: github.ref == 'refs/heads/dev'  # Only run for the dev branch
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push jorge-nextjs-portfolio:latest

      - name: Deploy to Dev Server
        env:
          EC2_HOST: ${{ secrets.EC2_DEV_HOST }}  # Dev server hostname or IP
          EC2_USER: ${{ secrets.EC2_USER }}      # SSH user for Dev server
          EC2_KEY: ${{ secrets.EC2_KEY }}        # SSH key for Dev server
        run: |
          ssh -o StrictHostKeyChecking=no -i $EC2_KEY $EC2_USER@$EC2_HOST << EOF
            docker pull jorge-nextjs-portfolio:latest
            cd /path/to/dev/docker-compose-directory
            docker-compose -f docker-compose.dev.yaml up -d --build
          EOF

  deploy_qa:
    if: github.ref == 'refs/heads/qa'  # Only run for the QA branch
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push jorge-nextjs-portfolio:latest

      - name: Deploy to QA Server
        env:
          EC2_HOST: ${{ secrets.EC2_QA_HOST }}   # QA server hostname or IP
          EC2_USER: ${{ secrets.EC2_USER }}      # SSH user for QA server
          EC2_KEY: ${{ secrets.EC2_KEY }}        # SSH key for QA server
        run: |
          ssh -o StrictHostKeyChecking=no -i $EC2_KEY $EC2_USER@$EC2_HOST << EOF
            docker pull jorge-nextjs-portfolio:latest
            cd /path/to/qa/docker-compose-directory
            docker-compose -f docker-compose.qa.yaml up -d --build
          EOF

  deploy_prod:
    if: github.ref == 'refs/heads/main'  # Only run for the main branch
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push jorge-nextjs-portfolio:latest

      - name: Deploy to Production Server
        env:
          EC2_HOST: ${{ secrets.EC2_PROD_HOST }}  # Production server hostname or IP
          EC2_USER: ${{ secrets.EC2_USER }}       # SSH user for production server
          EC2_KEY: ${{ secrets.EC2_KEY }}         # SSH key for production server
        run: |
          ssh -o StrictHostKeyChecking=no -i $EC2_KEY $EC2_USER@$EC2_HOST << EOF
            docker pull jorge-nextjs-portfolio:latest
            cd /path/to/prod/docker-compose-directory
            docker-compose -f docker-compose.prod.yaml up -d --build
          EOF