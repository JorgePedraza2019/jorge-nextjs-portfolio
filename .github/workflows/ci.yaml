name: CI

# Trigger the workflow on push events to the specified branches
on:
  push:
    branches:
      - dev               # Trigger on pushes to the dev branch
      - qa                # Trigger on pushes to the qa branch
      - main              # Trigger on pushes to the main branch
      - feature/**        # Trigger on pushes to any feature branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest version of Ubuntu for the job
    steps:
      - name: Check out code
        uses: actions/checkout@v2  # Checkout the repository code
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1  # Set up Docker Buildx for building images
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose  # Install Docker Compose
      - name: Build and start app in Docker
        run: docker-compose -f docker-compose.prod.yml up --build  # Build and start the Docker image using the production docker-compose file

  eslint:
    runs-on: ubuntu-latest  # Use the latest version of Ubuntu for the job
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2  # Checkout the repository code
      - name: Run ESLint in Docker  # Run ESLint to check for code quality issues in Docker
        run: docker-compose -f docker-compose.prod.yml exec app npm run lint  # Run the linter in the app container

  jest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2  # Checkout the repository code
      - name: Run Jest tests in Docker
        run: docker-compose -f docker-compose.prod.yml exec app npm test  # Run unit or integration tests in the app container

  playwright:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2  # Checkout the repository code
      - name: Run Playwright tests in Docker
        run: docker-compose -f docker-compose.prod.yml exec app npx playwright test  # Run Playwright tests in the app container
