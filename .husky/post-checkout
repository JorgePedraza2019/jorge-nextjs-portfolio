#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# ----------------------------------------
# Colors
# ----------------------------------------
COLOR_RED='\033[1;31m'
COLOR_GREEN='\033[1;32m'
COLOR_YELLOW='\033[1;33m'
COLOR_BLUE='\033[1;34m'
COLOR_RESET='\033[0m'

PROJECT_NAME="jorge-portfolio-frontend"

# Get current branch
CURR_BRANCH="$(git symbolic-ref --short HEAD 2>/dev/null || echo "")"

# Try to retrieve the previous branch
if [ -f .git/prev-branch.tmp ]; then
  PREV_BRANCH="$(cat .git/prev-branch.tmp)"
else
  PREV_BRANCH=""
fi

echo "${COLOR_BLUE}üîÑ Git branch changed. Restarting Docker environment... From: '$PREV_BRANCH' ‚û°Ô∏è  To: '$CURR_BRANCH'${COLOR_RESET}"

# Save current branch for future comparison
echo "$CURR_BRANCH" > .git/prev-branch.tmp

# Skip if same branch
if [ "$PREV_BRANCH" = "$CURR_BRANCH" ]; then
  echo "${COLOR_YELLOW}‚ö†Ô∏è  Same branch detected ($CURR_BRANCH), skipping stop/start${COLOR_RESET}"
  exit 0
fi

# üõë Stop previous environment
case "$PREV_BRANCH" in
  dev)
    make dev-local-stop || true
    ;;
  qa)
    make qa-local-stop || true
    ;;
  main)
    make prod-local-stop || true
    ;;
  feature/*)
    make feature-local-stop || true
    ;;
esac

# üîç Check if the container exists
container_exists() {
  docker ps -a --format '{{.Names}}' | grep -q "$1"
}

# üöÄ Start environment for the current branch
case "$CURR_BRANCH" in
  dev)
      sh utils/git-auto-merge.sh "$CURR_BRANCH"
    ;;
  qa)
      sh utils/git-auto-merge.sh "$CURR_BRANCH"
    ;;
  main)
      sh utils/git-auto-merge.sh "$CURR_BRANCH"
    ;;
  feature/*)
    if container_exists "${PROJECT_NAME}-app-feature-local-container"; then
      make feature-local-up
    else
      make feature-local-build-up
    fi
    ;;
  *)
    echo "${COLOR_RED}‚ö†Ô∏è  No Docker environment defined for branch '$CURR_BRANCH'${COLOR_RESET}"
    ;;
esac