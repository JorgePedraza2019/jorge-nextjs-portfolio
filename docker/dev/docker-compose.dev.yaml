services:
  app:  # Define the 'app' service for the Next.js application
    container_name: ${NEXT_CONTAINER_NAME}  # Set the container name using the environment variable NEXT_CONTAINER_NAME
    build:  # Build the Docker image using the specified Dockerfile
      context: ../..  # Set the build context to the parent directory to access the Dockerfile in the root directory
      dockerfile: ./Dockerfile.nextjs  # Specify the Dockerfile to use for building the image
      args:
        NODE_ENV: ${NODE_ENV}  # Pass the value of NODE_ENV as a build argument to the Dockerfile
        INSTALL_PLAYWRIGHT: ${INSTALL_PLAYWRIGHT}  # Pass the value of INSTALL_PLAYWRIGHT as a build argument to the Dockerfile
        INSTALL_DEV_LIBRARIES: ${INSTALL_DEV_LIBRARIES}
    environment:
      - NODE_ENV=${NODE_ENV}  # Add NODE_ENV as an environment variable
      - PORT=${NEXT_PORT}  # Port used by Next.js inside the container
    # You don't need to map ports here to expose to the host since Nginx will handle that.
    # ports:
    #   - "${HOST_PORT}:${NEXT_PORT}"  # Map external port (host) to internal port (Next.js)
    command: >
      sh -c "if [ \"$NODE_ENV\" = 'development' ]; then npm run dev; else npm start; fi"  # Conditional command based on NODE_ENV