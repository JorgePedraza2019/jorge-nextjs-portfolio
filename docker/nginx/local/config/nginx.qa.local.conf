# ---------------------------------------------
# Redirect all HTTP traffic to HTTPS (port 443)
# ---------------------------------------------
server {
    listen 80;
    server_name qa.jorgeportfolio.local;  # The domain name for the QA environment (non-HTTPS requests)
    
    location / {
        return 301 https://$host$request_uri;  # Redirect all traffic to the HTTPS version of the same URL
    }
}

# ------------------------------------------------------------
# HTTPS server block for the QA environment frontend subdomain
# ------------------------------------------------------------
server {
    listen 443 ssl;  # Listen for incoming HTTPS requests
    server_name qa.jorgeportfolio.local;  # The subdomain name for this QA environment

    # Path to the SSL certificate and private key (mounted inside the container)
    ssl_certificate /etc/nginx/certs/qa/qa.jorgeportfolio.local.crt;
    ssl_certificate_key /etc/nginx/certs/qa/qa.jorgeportfolio.local.key;

    # -------------------------
    # Security-related headers
    # -------------------------
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;  # Enforce HTTPS strictly in browsers
    add_header X-Content-Type-Options nosniff;  # Block MIME-type sniffing
    add_header X-Frame-Options DENY;  # Prevent the page from being embedded in iframes
    add_header X-XSS-Protection "1; mode=block";  # Enable basic cross-site scripting protection

    # ----------------------------------------
    # Reverse proxy configuration to frontend
    # ----------------------------------------
    location / {
        proxy_pass http://frontend:8000;  # Forward all requests to the frontend container running on port 8000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;  # Support WebSocket upgrades
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;  # Pass the original host header
        proxy_cache_bypass $http_upgrade;  # Disable cache during WebSocket upgrade
    }
}

# ----------------------------------------------------------------------------------
# Default HTTPS server block for all unmatched domains (wildcard catch/extra safety)
# ----------------------------------------------------------------------------------
server {
    listen 443 ssl default_server;  # Set this block as the default for unmatched HTTPS requests
    server_name _;  # Wildcard: matches any server name not matched earlier

    ssl_certificate /etc/nginx/certs/qa/qa.jorgeportfolio.local.crt;
    ssl_certificate_key /etc/nginx/certs/qa/qa.jorgeportfolio.local.key;

    return 444;  # Close the connection without responding
}